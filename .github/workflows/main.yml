name: Build, Push and Deploy Docker Image to EC2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  # SAST by SonarCloud Job
  sonarcloud_sast:
    name: Static Application Security Testing (SAST) by SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full clone for better analysis relevance

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GT_TOKKEN }}  # Needed for PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: org-backend  # Replace with your SonarCloud project key
          SONAR_ORGANIZATION: org-backend  # Replace with your SonarCloud organization key

  # SCA by Snyk Job
  snyk_scan:
    name: Software Composition Analysis by Snyk
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
  # Build and Push Image to Dockerhub and Create container on EC2
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: jaihub
        password: duckduckgo  # Use GitHub secrets for security

    # Step 3: Build the Docker image
    - name: Build Docker Image
      run: |
        docker buildx build -t jaihub/my-be-img:latest -f Dockerfile .

    # Step 4: Push the Docker image to Docker Hub
    - name: Push Docker Image
      run: |
        docker push jaihub/my-be-img:latest

    # Step 5: SSH into EC2 and pull Docker image from Docker Hub
    - name: SSH into EC2 and pull Docker image
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}  # Your EC2 instance public IP or DNS
        username: ${{ secrets.EC2_USER }}  # EC2 SSH user (e.g., 'ec2-user', 'ubuntu')
        key: ${{ secrets.EC2_SSH_KEY }}  # EC2 private SSH key
        port: 22  # The default SSH port for EC2 instances
        script: |
          # Pull the latest Docker image from Docker Hub
          sudo docker pull jaihub/my-be-img:latest

    # Step 6: Stop and remove any existing Docker container, then run the new container
    - name: Deploy Docker container on EC2
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Stop and remove the existing container if it exists
          sudo docker stop my-backend-container || true
          sudo docker rm my-backend-container || true

          # Run the new container from the pulled image
          sudo docker run -d --name my-backend-container -p 5203:5203 jaihub/my-be-img:latest
